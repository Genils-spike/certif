Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/nils/Projet/certif/appli/front/node_modules/react-native-letter-spacing/index.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    _component: {}
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/nils/Projet/certif/appli/front/node_modules/react-native-letter-spacing/index.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _reactTransformHmrLibIndexJs2(Component, id);
    };
}

function getTexts(arr) {
    var words = arr.split(' ');
    if (words.length > 1) {
        words = words.map(function (i) {
            return i.split('');
        });
        return words;
    } else {
        return [words];
    }
}

var _component = _wrapComponent('_component')(function (_Component) {
    _inherits(_class, _Component);

    function _class() {
        _classCallCheck(this, _class);

        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
    }

    _createClass(_class, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                style = _props.style,
                letterSpacing = _props.letterSpacing,
                textAlign = _props.textAlign,
                containerStyle = _props.containerStyle,
                children = _props.children;
            var wordSpacing = this.props.wordSpacing;

            if (!wordSpacing) {
                wordSpacing = letterSpacing * 3;
            }
            if (!wordSpacing) {
                wordSpacing = 15;
            }

            var words = getTexts(children);

            return _react3.default.createElement(
                _reactNative.View,
                { style: containerStyle, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 30
                    }
                },
                _react3.default.createElement(
                    _reactNative.View,
                    {
                        style: [styles.wrapper, { marginLeft: -1 * wordSpacing }, textAlign === 'center' && { justifyContent: 'center' }, textAlign === 'right' && { justifyContent: 'flex-end' }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 31
                        }
                    },
                    words.map(function (i, ind) {
                        return _react3.default.createElement(
                            _reactNative.View,
                            {
                                style: [styles.word, { marginLeft: wordSpacing }, textAlign === 'center' && { justifyContent: 'center' }],
                                key: ind, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 35
                                }
                            },
                            i.map(function (j, index) {
                                return _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: [style, style.text, index > 0 && { marginLeft: letterSpacing }],
                                        key: index, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 42
                                        }
                                    },
                                    j
                                );
                            })
                        );
                    })
                )
            );
        }
    }]);

    return _class;
}(_react2.Component));

exports.default = _component;


var styles = _reactNative.StyleSheet.create({
    word: {
        flexDirection: 'row'
    },
    wrapper: {
        flexDirection: 'row',
        flexWrap: 'wrap'
    },
    text: {
        margin: 0,
        padding: 0
    }

});